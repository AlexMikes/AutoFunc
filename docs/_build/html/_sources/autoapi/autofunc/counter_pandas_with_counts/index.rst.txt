:mod:`autofunc.counter_pandas_with_counts`
==========================================

.. py:module:: autofunc.counter_pandas_with_counts

.. autoapi-nested-parse::

   This counts instances of function-flow combinations per component to find the frequency of each combination by
   dividing it by all of the combinations for each component (# of occurrences / total occurrences).

   The output includes some of the intermediate data structures that can be used for finding other numbers besides
   frequency.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   autofunc.counter_pandas_with_counts.counter_pandas_with_counts


.. function:: counter_pandas_with_counts(dataframe)

   Counts instances and sorts them by frequency

   :param dataframe: A Pandas dataframe with the product information
   :type dataframe: Pandas dataframe

   :returns: * *comb_sort* -- Returns a dictionary of function and flow combinations sorted by frequency. The key is the
               component and the value is a list of the structure: [function-flow, frequency]
             * *counts* -- Returns a dictionary of the total number of function and flow combinations for each component
             * *combos* -- Returns a dictionary of the number of individual instances of function and flow combinations per component


